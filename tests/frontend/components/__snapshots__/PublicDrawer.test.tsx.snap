// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PublicDrawer /> rendering should render without problems 1`] = `
<PublicDrawer
  open={true}
  setOpen={[MockFunction]}
>
  <WithStyles(ForwardRef(Drawer))
    anchor="left"
    className="makeStyles-drawer-1"
    classes={
      Object {
        "paper": "makeStyles-drawerPaper-2",
      }
    }
    open={true}
    variant="persistent"
  >
    <ForwardRef(Drawer)
      anchor="left"
      className="makeStyles-drawer-1"
      classes={
        Object {
          "docked": "MuiDrawer-docked",
          "modal": "MuiDrawer-modal",
          "paper": "MuiDrawer-paper makeStyles-drawerPaper-2",
          "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
          "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
          "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
          "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
          "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
          "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
          "paperAnchorRight": "MuiDrawer-paperAnchorRight",
          "paperAnchorTop": "MuiDrawer-paperAnchorTop",
          "root": "MuiDrawer-root",
        }
      }
      open={true}
      variant="persistent"
    >
      <div
        className="MuiDrawer-root MuiDrawer-docked makeStyles-drawer-1"
      >
        <ForwardRef(Slide)
          appear={false}
          direction="right"
          in={true}
          timeout={
            Object {
              "enter": 225,
              "exit": 195,
            }
          }
        >
          <Transition
            appear={false}
            enter={true}
            exit={true}
            in={true}
            mountOnEnter={false}
            nodeRef={
              Object {
                "current": <div
                  class="MuiPaper-root MuiDrawer-paper makeStyles-drawerPaper-2 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft MuiPaper-elevation0"
                >
                  <div
                    class="makeStyles-drawerHeader-3"
                  >
                    <button
                      class="MuiButtonBase-root MuiIconButton-root"
                      id="close-drawer"
                      tabindex="0"
                      type="button"
                    >
                      <span
                        class="MuiIconButton-label"
                      >
                        <svg
                          aria-hidden="true"
                          class="MuiSvgIcon-root"
                          focusable="false"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
                          />
                        </svg>
                      </span>
                      <span
                        class="MuiTouchRipple-root"
                      />
                    </button>
                  </div>
                  <hr
                    class="MuiDivider-root"
                  />
                  <ul
                    class="MuiList-root MuiList-padding"
                  >
                    <div
                      aria-disabled="false"
                      class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                      id="trending"
                      role="button"
                      tabindex="0"
                    >
                      <div
                        class="MuiListItemIcon-root"
                      >
                        <svg
                          aria-hidden="true"
                          class="MuiSvgIcon-root"
                          focusable="false"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M13.5.67s.74 2.65.74 4.8c0 2.06-1.35 3.73-3.41 3.73-2.07 0-3.63-1.67-3.63-3.73l.03-.36C5.21 7.51 4 10.62 4 14c0 4.42 3.58 8 8 8s8-3.58 8-8C20 8.61 17.41 3.8 13.5.67zM11.71 19c-1.78 0-3.22-1.4-3.22-3.14 0-1.62 1.05-2.76 2.81-3.12 1.77-.36 3.6-1.21 4.62-2.58.39 1.29.59 2.65.59 4.04 0 2.65-2.15 4.8-4.8 4.8z"
                          />
                        </svg>
                      </div>
                      <div
                        class="MuiListItemText-root"
                      >
                        <span
                          class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                        >
                          Trending
                        </span>
                      </div>
                      <span
                        class="MuiTouchRipple-root"
                      />
                    </div>
                    <div
                      aria-disabled="false"
                      class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                      role="button"
                      tabindex="0"
                    >
                      <div
                        class="MuiListItemIcon-root"
                      >
                        <svg
                          aria-hidden="true"
                          class="MuiSvgIcon-root"
                          focusable="false"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M7 19h10V4H7v15zm-5-2h4V6H2v11zM18 6v11h4V6h-4z"
                          />
                        </svg>
                      </div>
                      <div
                        class="MuiListItemText-root"
                      >
                        <span
                          class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                        >
                          Collections
                        </span>
                      </div>
                      <span
                        class="MuiTouchRipple-root"
                      />
                    </div>
                    <div
                      aria-disabled="false"
                      class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                      role="button"
                      tabindex="0"
                    >
                      <div
                        class="MuiListItemIcon-root"
                      >
                        <svg
                          aria-hidden="true"
                          class="MuiSvgIcon-root"
                          focusable="false"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                          />
                        </svg>
                      </div>
                      <div
                        class="MuiListItemText-root"
                      >
                        <span
                          class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                        >
                          Browse
                        </span>
                      </div>
                      <span
                        class="MuiTouchRipple-root"
                      />
                    </div>
                  </ul>
                </div>,
              }
            }
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={
              Object {
                "enter": 225,
                "exit": 195,
              }
            }
            unmountOnExit={false}
          >
            <WithStyles(ForwardRef(Paper))
              className="MuiDrawer-paper makeStyles-drawerPaper-2 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
              elevation={0}
              square={true}
              style={
                Object {
                  "visibility": undefined,
                }
              }
            >
              <ForwardRef(Paper)
                className="MuiDrawer-paper makeStyles-drawerPaper-2 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "outlined": "MuiPaper-outlined",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
                square={true}
                style={
                  Object {
                    "visibility": undefined,
                  }
                }
              >
                <div
                  className="MuiPaper-root MuiDrawer-paper makeStyles-drawerPaper-2 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft MuiPaper-elevation0"
                  style={
                    Object {
                      "visibility": undefined,
                    }
                  }
                >
                  <div
                    className="makeStyles-drawerHeader-3"
                  >
                    <WithStyles(ForwardRef(IconButton))
                      id="close-drawer"
                      onClick={[Function]}
                    >
                      <ForwardRef(IconButton)
                        classes={
                          Object {
                            "colorInherit": "MuiIconButton-colorInherit",
                            "colorPrimary": "MuiIconButton-colorPrimary",
                            "colorSecondary": "MuiIconButton-colorSecondary",
                            "disabled": "Mui-disabled",
                            "edgeEnd": "MuiIconButton-edgeEnd",
                            "edgeStart": "MuiIconButton-edgeStart",
                            "label": "MuiIconButton-label",
                            "root": "MuiIconButton-root",
                            "sizeSmall": "MuiIconButton-sizeSmall",
                          }
                        }
                        id="close-drawer"
                        onClick={[Function]}
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          centerRipple={true}
                          className="MuiIconButton-root"
                          disabled={false}
                          focusRipple={true}
                          id="close-drawer"
                          onClick={[Function]}
                        >
                          <ForwardRef(ButtonBase)
                            centerRipple={true}
                            className="MuiIconButton-root"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            disabled={false}
                            focusRipple={true}
                            id="close-drawer"
                            onClick={[Function]}
                          >
                            <button
                              className="MuiButtonBase-root MuiIconButton-root"
                              disabled={false}
                              id="close-drawer"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiIconButton-label"
                              >
                                <ForwardRef>
                                  <WithStyles(ForwardRef(SvgIcon))>
                                    <ForwardRef(SvgIcon)
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                          "colorError": "MuiSvgIcon-colorError",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                          "root": "MuiSvgIcon-root",
                                        }
                                      }
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
                                        />
                                      </svg>
                                    </ForwardRef(SvgIcon)>
                                  </WithStyles(ForwardRef(SvgIcon))>
                                </ForwardRef>
                              </span>
                              <WithStyles(memo)
                                center={true}
                              >
                                <ForwardRef(TouchRipple)
                                  center={true}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child",
                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                      "ripple": "MuiTouchRipple-ripple",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                      "root": "MuiTouchRipple-root",
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTouchRipple-root"
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      component={null}
                                      exit={true}
                                    />
                                  </span>
                                </ForwardRef(TouchRipple)>
                              </WithStyles(memo)>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(IconButton)>
                    </WithStyles(ForwardRef(IconButton))>
                  </div>
                  <WithStyles(ForwardRef(Divider))>
                    <ForwardRef(Divider)
                      classes={
                        Object {
                          "absolute": "MuiDivider-absolute",
                          "flexItem": "MuiDivider-flexItem",
                          "inset": "MuiDivider-inset",
                          "light": "MuiDivider-light",
                          "middle": "MuiDivider-middle",
                          "root": "MuiDivider-root",
                          "vertical": "MuiDivider-vertical",
                        }
                      }
                    >
                      <hr
                        className="MuiDivider-root"
                      />
                    </ForwardRef(Divider)>
                  </WithStyles(ForwardRef(Divider))>
                  <WithStyles(ForwardRef(List))>
                    <ForwardRef(List)
                      classes={
                        Object {
                          "dense": "MuiList-dense",
                          "padding": "MuiList-padding",
                          "root": "MuiList-root",
                          "subheader": "MuiList-subheader",
                        }
                      }
                    >
                      <ul
                        className="MuiList-root MuiList-padding"
                      >
                        <WithStyles(ForwardRef(ListItem))
                          button={true}
                          id="trending"
                          onClick={[Function]}
                        >
                          <ForwardRef(ListItem)
                            button={true}
                            classes={
                              Object {
                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                "button": "MuiListItem-button",
                                "container": "MuiListItem-container",
                                "dense": "MuiListItem-dense",
                                "disabled": "Mui-disabled",
                                "divider": "MuiListItem-divider",
                                "focusVisible": "Mui-focusVisible",
                                "gutters": "MuiListItem-gutters",
                                "root": "MuiListItem-root",
                                "secondaryAction": "MuiListItem-secondaryAction",
                                "selected": "Mui-selected",
                              }
                            }
                            id="trending"
                            onClick={[Function]}
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                              component="div"
                              disabled={false}
                              focusVisibleClassName="Mui-focusVisible"
                              id="trending"
                              onClick={[Function]}
                            >
                              <ForwardRef(ButtonBase)
                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                component="div"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                id="trending"
                                onClick={[Function]}
                              >
                                <div
                                  aria-disabled={false}
                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                  id="trending"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <WithStyles(ForwardRef(ListItemIcon))
                                    key=".0"
                                  >
                                    <ForwardRef(ListItemIcon)
                                      classes={
                                        Object {
                                          "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                          "root": "MuiListItemIcon-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiListItemIcon-root"
                                      >
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M13.5.67s.74 2.65.74 4.8c0 2.06-1.35 3.73-3.41 3.73-2.07 0-3.63-1.67-3.63-3.73l.03-.36C5.21 7.51 4 10.62 4 14c0 4.42 3.58 8 8 8s8-3.58 8-8C20 8.61 17.41 3.8 13.5.67zM11.71 19c-1.78 0-3.22-1.4-3.22-3.14 0-1.62 1.05-2.76 2.81-3.12 1.77-.36 3.6-1.21 4.62-2.58.39 1.29.59 2.65.59 4.04 0 2.65-2.15 4.8-4.8 4.8z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </div>
                                    </ForwardRef(ListItemIcon)>
                                  </WithStyles(ForwardRef(ListItemIcon))>
                                  <WithStyles(ForwardRef(ListItemText))
                                    key=".1"
                                    primary="Trending"
                                    primaryTypographyProps={
                                      Object {
                                        "color": "textSecondary",
                                      }
                                    }
                                  >
                                    <ForwardRef(ListItemText)
                                      classes={
                                        Object {
                                          "dense": "MuiListItemText-dense",
                                          "inset": "MuiListItemText-inset",
                                          "multiline": "MuiListItemText-multiline",
                                          "primary": "MuiListItemText-primary",
                                          "root": "MuiListItemText-root",
                                          "secondary": "MuiListItemText-secondary",
                                        }
                                      }
                                      primary="Trending"
                                      primaryTypographyProps={
                                        Object {
                                          "color": "textSecondary",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiListItemText-root"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="MuiListItemText-primary"
                                          color="textSecondary"
                                          component="span"
                                          display="block"
                                          variant="body1"
                                        >
                                          <ForwardRef(Typography)
                                            className="MuiListItemText-primary"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            color="textSecondary"
                                            component="span"
                                            display="block"
                                            variant="body1"
                                          >
                                            <span
                                              className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                                            >
                                              Trending
                                            </span>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(ListItemText)>
                                  </WithStyles(ForwardRef(ListItemText))>
                                  <WithStyles(memo)
                                    center={false}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={false}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(memo)>
                                </div>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(ListItem)>
                        </WithStyles(ForwardRef(ListItem))>
                        <WithStyles(ForwardRef(ListItem))
                          button={true}
                        >
                          <ForwardRef(ListItem)
                            button={true}
                            classes={
                              Object {
                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                "button": "MuiListItem-button",
                                "container": "MuiListItem-container",
                                "dense": "MuiListItem-dense",
                                "disabled": "Mui-disabled",
                                "divider": "MuiListItem-divider",
                                "focusVisible": "Mui-focusVisible",
                                "gutters": "MuiListItem-gutters",
                                "root": "MuiListItem-root",
                                "secondaryAction": "MuiListItem-secondaryAction",
                                "selected": "Mui-selected",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                              component="div"
                              disabled={false}
                              focusVisibleClassName="Mui-focusVisible"
                            >
                              <ForwardRef(ButtonBase)
                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                component="div"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                              >
                                <div
                                  aria-disabled={false}
                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                  onBlur={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <WithStyles(ForwardRef(ListItemIcon))
                                    key=".0"
                                  >
                                    <ForwardRef(ListItemIcon)
                                      classes={
                                        Object {
                                          "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                          "root": "MuiListItemIcon-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiListItemIcon-root"
                                      >
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M7 19h10V4H7v15zm-5-2h4V6H2v11zM18 6v11h4V6h-4z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </div>
                                    </ForwardRef(ListItemIcon)>
                                  </WithStyles(ForwardRef(ListItemIcon))>
                                  <WithStyles(ForwardRef(ListItemText))
                                    key=".1"
                                    primary="Collections"
                                    primaryTypographyProps={
                                      Object {
                                        "color": "textSecondary",
                                      }
                                    }
                                  >
                                    <ForwardRef(ListItemText)
                                      classes={
                                        Object {
                                          "dense": "MuiListItemText-dense",
                                          "inset": "MuiListItemText-inset",
                                          "multiline": "MuiListItemText-multiline",
                                          "primary": "MuiListItemText-primary",
                                          "root": "MuiListItemText-root",
                                          "secondary": "MuiListItemText-secondary",
                                        }
                                      }
                                      primary="Collections"
                                      primaryTypographyProps={
                                        Object {
                                          "color": "textSecondary",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiListItemText-root"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="MuiListItemText-primary"
                                          color="textSecondary"
                                          component="span"
                                          display="block"
                                          variant="body1"
                                        >
                                          <ForwardRef(Typography)
                                            className="MuiListItemText-primary"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            color="textSecondary"
                                            component="span"
                                            display="block"
                                            variant="body1"
                                          >
                                            <span
                                              className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                                            >
                                              Collections
                                            </span>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(ListItemText)>
                                  </WithStyles(ForwardRef(ListItemText))>
                                  <WithStyles(memo)
                                    center={false}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={false}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(memo)>
                                </div>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(ListItem)>
                        </WithStyles(ForwardRef(ListItem))>
                        <WithStyles(ForwardRef(ListItem))
                          button={true}
                        >
                          <ForwardRef(ListItem)
                            button={true}
                            classes={
                              Object {
                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                "button": "MuiListItem-button",
                                "container": "MuiListItem-container",
                                "dense": "MuiListItem-dense",
                                "disabled": "Mui-disabled",
                                "divider": "MuiListItem-divider",
                                "focusVisible": "Mui-focusVisible",
                                "gutters": "MuiListItem-gutters",
                                "root": "MuiListItem-root",
                                "secondaryAction": "MuiListItem-secondaryAction",
                                "selected": "Mui-selected",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                              component="div"
                              disabled={false}
                              focusVisibleClassName="Mui-focusVisible"
                            >
                              <ForwardRef(ButtonBase)
                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                component="div"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                              >
                                <div
                                  aria-disabled={false}
                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                  onBlur={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <WithStyles(ForwardRef(ListItemIcon))
                                    key=".0"
                                  >
                                    <ForwardRef(ListItemIcon)
                                      classes={
                                        Object {
                                          "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                          "root": "MuiListItemIcon-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiListItemIcon-root"
                                      >
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </div>
                                    </ForwardRef(ListItemIcon)>
                                  </WithStyles(ForwardRef(ListItemIcon))>
                                  <WithStyles(ForwardRef(ListItemText))
                                    key=".1"
                                    primary="Browse"
                                    primaryTypographyProps={
                                      Object {
                                        "color": "textSecondary",
                                      }
                                    }
                                  >
                                    <ForwardRef(ListItemText)
                                      classes={
                                        Object {
                                          "dense": "MuiListItemText-dense",
                                          "inset": "MuiListItemText-inset",
                                          "multiline": "MuiListItemText-multiline",
                                          "primary": "MuiListItemText-primary",
                                          "root": "MuiListItemText-root",
                                          "secondary": "MuiListItemText-secondary",
                                        }
                                      }
                                      primary="Browse"
                                      primaryTypographyProps={
                                        Object {
                                          "color": "textSecondary",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiListItemText-root"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="MuiListItemText-primary"
                                          color="textSecondary"
                                          component="span"
                                          display="block"
                                          variant="body1"
                                        >
                                          <ForwardRef(Typography)
                                            className="MuiListItemText-primary"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            color="textSecondary"
                                            component="span"
                                            display="block"
                                            variant="body1"
                                          >
                                            <span
                                              className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                                            >
                                              Browse
                                            </span>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(ListItemText)>
                                  </WithStyles(ForwardRef(ListItemText))>
                                  <WithStyles(memo)
                                    center={false}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={false}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(memo)>
                                </div>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(ListItem)>
                        </WithStyles(ForwardRef(ListItem))>
                      </ul>
                    </ForwardRef(List)>
                  </WithStyles(ForwardRef(List))>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </Transition>
        </ForwardRef(Slide)>
      </div>
    </ForwardRef(Drawer)>
  </WithStyles(ForwardRef(Drawer))>
</PublicDrawer>
`;
