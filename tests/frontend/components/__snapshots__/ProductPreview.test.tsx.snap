// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProductPreview /> rendering should render without problems 1`] = `
<ProductPreview
  desc="Some description"
  img="some-image.jpeg"
  name="Some product"
  url="some-url"
>
  <ForwardRef(Zoom)
    in={true}
  >
    <Transition
      appear={true}
      enter={true}
      exit={true}
      in={true}
      mountOnEnter={false}
      onEnter={[Function]}
      onEntered={[Function]}
      onEntering={[Function]}
      onExit={[Function]}
      onExited={[Function]}
      onExiting={[Function]}
      timeout={
        Object {
          "enter": 225,
          "exit": 195,
        }
      }
      unmountOnExit={false}
    >
      <WithStyles(ForwardRef(Paper))
        className="makeStyles-root-1"
        elevation={3}
        onClick={[Function]}
        style={
          Object {
            "transform": "none",
            "visibility": undefined,
          }
        }
      >
        <ForwardRef(Paper)
          className="makeStyles-root-1"
          classes={
            Object {
              "elevation0": "MuiPaper-elevation0",
              "elevation1": "MuiPaper-elevation1",
              "elevation10": "MuiPaper-elevation10",
              "elevation11": "MuiPaper-elevation11",
              "elevation12": "MuiPaper-elevation12",
              "elevation13": "MuiPaper-elevation13",
              "elevation14": "MuiPaper-elevation14",
              "elevation15": "MuiPaper-elevation15",
              "elevation16": "MuiPaper-elevation16",
              "elevation17": "MuiPaper-elevation17",
              "elevation18": "MuiPaper-elevation18",
              "elevation19": "MuiPaper-elevation19",
              "elevation2": "MuiPaper-elevation2",
              "elevation20": "MuiPaper-elevation20",
              "elevation21": "MuiPaper-elevation21",
              "elevation22": "MuiPaper-elevation22",
              "elevation23": "MuiPaper-elevation23",
              "elevation24": "MuiPaper-elevation24",
              "elevation3": "MuiPaper-elevation3",
              "elevation4": "MuiPaper-elevation4",
              "elevation5": "MuiPaper-elevation5",
              "elevation6": "MuiPaper-elevation6",
              "elevation7": "MuiPaper-elevation7",
              "elevation8": "MuiPaper-elevation8",
              "elevation9": "MuiPaper-elevation9",
              "outlined": "MuiPaper-outlined",
              "root": "MuiPaper-root",
              "rounded": "MuiPaper-rounded",
            }
          }
          elevation={3}
          onClick={[Function]}
          style={
            Object {
              "transform": "none",
              "visibility": undefined,
            }
          }
        >
          <div
            className="MuiPaper-root makeStyles-root-1 MuiPaper-elevation3 MuiPaper-rounded"
            onClick={[Function]}
            style={
              Object {
                "transform": "none",
                "visibility": undefined,
              }
            }
          >
            <WithStyles(ForwardRef(CardActionArea))
              className="makeStyles-cardRoot-2"
            >
              <ForwardRef(CardActionArea)
                className="makeStyles-cardRoot-2"
                classes={
                  Object {
                    "focusHighlight": "MuiCardActionArea-focusHighlight",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiCardActionArea-root",
                  }
                }
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiCardActionArea-root makeStyles-cardRoot-2"
                  focusVisibleClassName="Mui-focusVisible"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiCardActionArea-root makeStyles-cardRoot-2"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    focusVisibleClassName="Mui-focusVisible"
                  >
                    <button
                      className="MuiButtonBase-root MuiCardActionArea-root makeStyles-cardRoot-2"
                      disabled={false}
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <div
                        className="makeStyles-details-3"
                      >
                        <WithStyles(ForwardRef(CardContent))
                          className="makeStyles-content-4"
                        >
                          <ForwardRef(CardContent)
                            className="makeStyles-content-4"
                            classes={
                              Object {
                                "root": "MuiCardContent-root",
                              }
                            }
                          >
                            <div
                              className="MuiCardContent-root makeStyles-content-4"
                            >
                              <WithStyles(ForwardRef(Typography))
                                component="h6"
                                variant="h6"
                              >
                                <ForwardRef(Typography)
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  component="h6"
                                  variant="h6"
                                >
                                  <h6
                                    className="MuiTypography-root MuiTypography-h6"
                                  >
                                    Some product
                                  </h6>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <WithStyles(ForwardRef(Typography))
                                color="textSecondary"
                                variant="subtitle1"
                              >
                                <ForwardRef(Typography)
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  color="textSecondary"
                                  variant="subtitle1"
                                >
                                  <h6
                                    className="MuiTypography-root MuiTypography-subtitle1 MuiTypography-colorTextSecondary"
                                  >
                                    Some description
                                  </h6>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </div>
                          </ForwardRef(CardContent)>
                        </WithStyles(ForwardRef(CardContent))>
                      </div>
                      <WithStyles(ForwardRef(CardMedia))
                        image="some-image.jpeg"
                        style={
                          Object {
                            "height": "100%",
                            "width": 250,
                          }
                        }
                        title="Some product"
                      >
                        <ForwardRef(CardMedia)
                          classes={
                            Object {
                              "img": "MuiCardMedia-img",
                              "media": "MuiCardMedia-media",
                              "root": "MuiCardMedia-root",
                            }
                          }
                          image="some-image.jpeg"
                          style={
                            Object {
                              "height": "100%",
                              "width": 250,
                            }
                          }
                          title="Some product"
                        >
                          <div
                            className="MuiCardMedia-root"
                            style={
                              Object {
                                "backgroundImage": "url(\\"some-image.jpeg\\")",
                                "height": "100%",
                                "width": 250,
                              }
                            }
                            title="Some product"
                          />
                        </ForwardRef(CardMedia)>
                      </WithStyles(ForwardRef(CardMedia))>
                      <span
                        className="MuiCardActionArea-focusHighlight"
                      />
                      <WithStyles(memo)
                        center={false}
                      >
                        <ForwardRef(TouchRipple)
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child",
                              "childLeaving": "MuiTouchRipple-childLeaving",
                              "childPulsate": "MuiTouchRipple-childPulsate",
                              "ripple": "MuiTouchRipple-ripple",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                              "root": "MuiTouchRipple-root",
                            }
                          }
                        >
                          <span
                            className="MuiTouchRipple-root"
                          >
                            <TransitionGroup
                              childFactory={[Function]}
                              component={null}
                              exit={true}
                            />
                          </span>
                        </ForwardRef(TouchRipple)>
                      </WithStyles(memo)>
                    </button>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(CardActionArea)>
            </WithStyles(ForwardRef(CardActionArea))>
          </div>
        </ForwardRef(Paper)>
      </WithStyles(ForwardRef(Paper))>
    </Transition>
  </ForwardRef(Zoom)>
</ProductPreview>
`;
